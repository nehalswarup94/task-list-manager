{"version":3,"sources":["components/Header/index.jsx","components/Tasks/TaskList.jsx","components/Tasks/index.jsx","components/AddTask/index.jsx","components/Footer/index.jsx","components/About/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","title","show","showAddTask","location","useLocation","className","pathname","onClick","defaultProps","TaskList","props","task","reminder","onDoubleClick","onToggle","id","text","style","color","cursor","onDelete","day","Tasks","tasks","map","el","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","onAdd","alert","type","placeholder","value","onChange","target","currentTarget","checked","Footer","textAlign","to","About","App","setTasks","setShowAddTask","useEffect","a","fetchTasks","taskFromServer","getTasks","fetch","res","json","data","fetchTask","addTask","method","headers","body","JSON","stringify","deleteTask","updatedTasks","filter","toggleReminder","taskToToggle","updated","path","exact","render","length","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ccebaf8f.chunk.js","sourcesContent":["import React from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport './index.scss';\r\n\r\nconst Header = ({title, show, showAddTask}) => {\r\n    const location =useLocation();\r\n    return (\r\n        <div className='header'>\r\n            <p className='title'>{title}</p>\r\n            {location.pathname === '/' && \r\n            <button className={`btn ${showAddTask ? 'red' : ''}`} onClick={show}>\r\n                {showAddTask ? 'Close' : 'Add'}\r\n            </button>}\r\n        </div>\r\n    )\r\n}\r\n\r\nHeader.defaultProps = {\r\n    title : 'Task Tracker',\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport {FaTimes} from 'react-icons/fa'\r\nconst TaskList = (props) => {\r\n    return (\r\n        <div className={`task-list-item ${props.task.reminder ? 'reminder' : ''}`} onDoubleClick={() =>props.onToggle(props.task.id)}>\r\n            <h3>{props.task.text} <FaTimes style={{color: 'red', cursor: 'pointer'}} \r\n            onClick={() => props.onDelete(props.task.id)}/></h3>\r\n            <p>{props.task.day}</p>\r\n        </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default TaskList\r\n","import React from 'react';\r\nimport TaskList from './TaskList';\r\nimport'./index.scss';\r\n\r\nconst Tasks = props => {\r\n    return (\r\n        <div>\r\n            {props.tasks.map((el)=>{\r\n                return <TaskList key={el.id}task={el} onDelete={props.onDelete} onToggle={props.onToggle}/>\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Tasks;\r\n","import React, { useState } from 'react';\r\nimport './index.scss';\r\n\r\nconst AddTask = (props) => {\r\n    const [text, setText] = useState('');\r\n    const [day, setDay] = useState('');\r\n    const [reminder, setReminder] = useState(false);\r\n\r\n    const onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(!text){\r\n            alert('Please add task');\r\n            return;\r\n        }\r\n\r\n        props.onAdd({text, day, reminder});\r\n        setText('');\r\n        setDay('')\r\n        setReminder(false);\r\n    }\r\n    return (\r\n        <form className='add-form' onSubmit={onSubmit}>\r\n            <div className='form-control'>\r\n                <label className='label'>Task</label>\r\n                <input className='text-field' type='text'\r\n                    placeholder='Add Task'\r\n                    value={text}\r\n                    onChange={(e) => setText(e.target.value)} />\r\n            </div>\r\n            <div className='form-control'>\r\n                <label className='label'>Day & Time</label>\r\n                <input className='text-field' type='text' placeholder='Add Day and Time'\r\n                value={day}\r\n                onChange={(e) => setDay(e.target.value)} />\r\n            </div>\r\n            <div className='form-control reminder-check'>\r\n                <label className='label'>Set Reminer</label>\r\n                <input type='checkbox' \r\n                value={reminder}\r\n                onChange={(e) => setReminder(e.currentTarget.checked)}/>\r\n            </div>\r\n            <input type='submit' value='Save Task' className='save' />\r\n\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddTask\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Footer = () => {\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            Copyright &copy; 2021\r\n            <Link to='/about'>About</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst About = () => {\r\n    return (\r\n        <div style={{textAlign:'center'}}>\r\n            <h4>Version latest</h4>\r\n            <Link to='/'>Go Back</Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport AddTask from './components/AddTask';\nimport Footer from './components/Footer';\nimport About from './components/About';\n\nfunction App() {\n  const [tasks, setTasks] = useState([]);\n  const [showAddTask, setShowAddTask] = useState(false);\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const taskFromServer = await fetchTasks();\n      setTasks(taskFromServer);\n    }\n    getTasks();\n  }, [])\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:5000/tasks');\n    const data = await res.json();\n    return data\n  }\n\n  const fetchTask = async (id) => {\n    const res = await fetch(`http://localhost:5000/tasks/${id}`);\n    const data = await res.json();\n    return data\n  }\n\n  //Add task\n  const addTask = async (task) => {\n    const res = await fetch(`http://localhost:5000/tasks`, {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n\n    const data = await res.json();\n    setTasks([data, ...tasks]);\n    // const id= Math.floor(Math.random() * 10000)+1;\n    // console.log(Math.floor(Math.random() * 10000)+1);\n    // const newTask={id, ...task}\n    //   setTasks([newTask,...tasks]);\n    //   console.log(tasks)\n  }\n\n  //Delete task\n  const deleteTask = async (id) => {\n    await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'DELETE'\n    })\n    let updatedTasks = tasks.filter(el => el.id !== id);\n    setTasks(updatedTasks)\n\n  }\n\n  //toggle reminder\n  const toggleReminder = async (id) => {\n    const taskToToggle = await fetchTask(id);\n    const updated = { ...taskToToggle, reminder: !taskToToggle.reminder };\n    const res = await fetch(`http://localhost:5000/tasks/${id}`, {\n      method: 'PUT',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(updated)\n    });\n    const data = await res.json();\n    setTasks(tasks.map(el => el.id === id ? { ...el, reminder: data.reminder } : el));\n  }\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header title='Task Manager' show={() => setShowAddTask(!showAddTask)} showAddTask={showAddTask} />\n\n        <Route path='/' exact render={(props) => (\n          <>\n            {showAddTask && <AddTask onAdd={addTask} />}\n            {tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : (\n              'No Tasks to show'\n            )}\n          </>\n        )}/>\n      <Route path='/about' component={About} />\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}